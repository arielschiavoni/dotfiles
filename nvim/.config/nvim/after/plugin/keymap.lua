local utils = require("ariel.utils")
local Remap = require("ariel.keymap")
local nnoremap = Remap.nnoremap
local inoremap = Remap.inoremap
local vnoremap = Remap.vnoremap

-- general purpose keymaps
nnoremap("<leader><CR>", utils.reload_config, { desc = "reload neovim config" })
nnoremap("<C-f>", ":silent !tmux new-window tmux-sessionizer<CR>", { desc = "create tmux session" })
nnoremap("<C-s>", ":silent !tmux new-window tmux-find-session<CR>", { desc = "find tmux session" })
nnoremap("<leader>x", ":silent !chmod +x %<CR>", { desc = "make current buffer executable" })
nnoremap("<leader>w", ":w!<CR>", { desc = "save current buffer" })
nnoremap("<leader>W", ":wa!<CR>", { desc = "save all open buffers" })
nnoremap("<leader>n", ":enew<CR>", { desc = "create new buffer" })
nnoremap("<leader><leader>", ":bd<CR>", { desc = "close current buffer" })
nnoremap("<leader>|", ":vsplit<CR>", { desc = "create vertical split" })
nnoremap("<leader>-", ":split<CR>", { desc = "create horizontal split" })
nnoremap("<leader>+", ":Lazy<CR>", { desc = "open lazy plugin manager" })
nnoremap("<leader>~", ":let @* = expand('%:p')<CR>", { desc = "copy buffer's absolute path to clipboard" })
nnoremap("<leader>`", ":let @* = expand('%:t')<CR>", { desc = "copy buffer's file name to clipboard" })
nnoremap("<leader>d", ":put =strftime('%d/%m/%Y')<CR>", { desc = "insert current date" })
nnoremap("<up>", ":echoerr 'use h j k l ðŸ˜ƒ'<CR>", { desc = "disable arrow keys in normal mode" })
nnoremap("<down>", ":echoerr 'use h j k l ðŸ˜ƒ'<CR>", { desc = "disable arrow keys in normal mode" })
nnoremap("<left>", ":echoerr 'use h j k l ðŸ˜ƒ'<CR>", { desc = "disable arrow keys in normal mode" })
nnoremap("<right>", ":echoerr 'use h j k l ðŸ˜ƒ'<CR>", { desc = "disable arrow keys in normal mode" })
nnoremap("<leader>y_", "^yg_", { desc = "yank line without leading or trailing spaces" })
nnoremap("[q", ":cprev<CR>", { desc = "quickfix list previous item" })
nnoremap("[Q", ":cfirst<CR>", { desc = "quickfix list first item" })
nnoremap("]q", ":cnext<CR>", { desc = "quickfix list next item" })
nnoremap("]Q", ":clast<CR>", { desc = "quickfix list last item" })
nnoremap("<leader>[", ":copen<CR>", { desc = "open quickfix list" })
nnoremap("<leader>]", ":cclose<CR>", { desc = "close quickfix list" })
nnoremap("<A-j>", ":m .+1<CR>==", { desc = "move current line down" })
nnoremap("<A-k>", ":m .-2<CR>==", { desc = "move current line up" })
inoremap("<A-j>", "<ESC>:m .+1<CR>==gi", { desc = "move current line down" })
inoremap("<A-k>", "<ESC>:m .-2<CR>==gi", { desc = "move current line up" })
vnoremap("<A-j>", ":m '>+1<CR>gv=gv", { desc = "move current line down" })
vnoremap("<A-k>", ":m '<-2<CR>gv=gv", { desc = "move current line up" })
nnoremap("<C-u>", "<C-u>zz", { desc = "page up and center" })
nnoremap("<C-d>", "<C-d>zz", { desc = "page down and center" })
nnoremap("n", "nzz", { desc = "next and center" })
